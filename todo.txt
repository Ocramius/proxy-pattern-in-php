1. What are proxies (interface/extension)
    - not an adapter: adapter = different interface, proxy = same interface
    - very similar to decorator, but a proxy shouldn't really alter behavior
2. Example with a hand-written proxy
3. Advantages of proxies (why using them at all?)
4. Examples of proxy usages
    - remote proxy
    - weak reference (memory impact)
    - virtual proxy (lazy loading)
    - protection proxy (limit # of accesses, acl)
    - smart reference (redirecting calls, singleton, etc.)
    - additional logic (behavioral/decorator) (logging/AOP/immutability/strategy)
    - null object
5. Assumptions when working with proxies in PHP
    - serialization
    - public properties
    - limitations (php magic)
    - interface implementation (instead of extending concrete classes)
6. Code generation for proxies in PHP (why code generation for proxies?)